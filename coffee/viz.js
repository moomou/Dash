// Generated by IcedCoffeeScript 1.6.3-e
(function() {
  var height, margin, plotPunchCard, width, xTitles, yTitles;



  height = 550;

  width = 750;

  margin = 7;

  yTitles = "日, 一,二,三,四,五,六".split(",");

  xTitles = ["learning", "language", "algorithm", "ai", "startup", "reading", "fun", "thinking", "hack"];

  plotPunchCard = function(weekData) {
    var canvas, day, pt, spaceX, task, x, xScale, y, yScale, _i, _j, _k, _len, _ref, _ref1, _results, _results1, _results2;
    $('#svg-container').empty();
    xScale = d3.scale.linear().domain([0, 6]);
    yScale = d3.scale.linear().domain([0, 3]);
    canvas = d3.select('#svg-container').append('svg').attr("width", width - 2 * margin).attr("height", height - 2 * margin);
    spaceX = (width - margin * 10) / xTitles.length;
    canvas.append("g").selectAll(".rule").data((function() {
      _results = [];
      for (var _i = 0, _ref = xTitles.length; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this)).enter().append("text").attr("x", function(d) {
      return d * (spaceX + margin) + 8 * margin;
    }).attr("y", height - margin * 2.5).attr("text-anchor", "middle").attr('fill', 'black').text(function(d) {
      return xTitles[d];
    });
    canvas.append("g").selectAll(".rule").data((function() {
      _results1 = [];
      for (var _j = 0, _ref1 = yTitles.length; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; 0 <= _ref1 ? _j++ : _j--){ _results1.push(_j); }
      return _results1;
    }).apply(this)).enter().append("text").attr("y", function(d) {
      return 5 * margin + 25 * margin * yScale(d);
    }).attr("x", margin).attr("text-anchor", "left").attr("font-family", "serif").attr('fill', 'black').text(function(d) {
      return yTitles[d];
    });
    _results2 = [];
    for (y = _k = 0, _len = weekData.length; _k < _len; y = ++_k) {
      day = weekData[y];
      if (!day) {
        continue;
      }
      _results2.push((function() {
        var _results3;
        _results3 = [];
        for (task in day) {
          pt = day[task];
          console.log(task);
          x = xTitles.indexOf(task);
          _results3.push(canvas.append('g').attr("transform", "translate(" + (2.5 * margin) + ", 0)").selectAll('circle').data([pt]).enter().append('circle').style("fill", '#' + Math.floor(Math.random() * 16777215).toString(16)).attr('r', function(d) {
            return Math.abs(d) * 6;
          }).attr('transform', function() {
            return "translate(                    " + (x * (spaceX + margin) + 5 * margin) + ",                    " + (5 * margin + 25 * margin * yScale(y)) + ")";
          }));
        }
        return _results3;
      })());
    }
    return _results2;
  };

  window.PlotPunchCard = function(goalData, progressData) {
    console.log(progressData);
    return plotPunchCard(progressData);
  };

}).call(this);
